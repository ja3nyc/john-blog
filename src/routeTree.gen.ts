/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogIndexRouteImport } from './routes/blog.index'
import { Route as BlogSlugRouteImport } from './routes/blog.$slug'
import { ServerRoute as ApiOgPageServerRouteImport } from './routes/api/og/$page'
import { ServerRoute as ApiOgBlogSlugServerRouteImport } from './routes/api/og/blog.$slug'

const rootServerRouteImport = createServerRootRoute()

const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogSlugRoute = BlogSlugRouteImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiOgPageServerRoute = ApiOgPageServerRouteImport.update({
  id: '/api/og/$page',
  path: '/api/og/$page',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiOgBlogSlugServerRoute = ApiOgBlogSlugServerRouteImport.update({
  id: '/api/og/blog/$slug',
  path: '/api/og/blog/$slug',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/blog': typeof BlogIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/blog': typeof BlogIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/blog/': typeof BlogIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/contact' | '/blog/$slug' | '/blog'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/contact' | '/blog/$slug' | '/blog'
  id: '__root__' | '/' | '/about' | '/contact' | '/blog/$slug' | '/blog/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  BlogSlugRoute: typeof BlogSlugRoute
  BlogIndexRoute: typeof BlogIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/og/$page': typeof ApiOgPageServerRoute
  '/api/og/blog/$slug': typeof ApiOgBlogSlugServerRoute
}
export interface FileServerRoutesByTo {
  '/api/og/$page': typeof ApiOgPageServerRoute
  '/api/og/blog/$slug': typeof ApiOgBlogSlugServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/og/$page': typeof ApiOgPageServerRoute
  '/api/og/blog/$slug': typeof ApiOgBlogSlugServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/og/$page' | '/api/og/blog/$slug'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/og/$page' | '/api/og/blog/$slug'
  id: '__root__' | '/api/og/$page' | '/api/og/blog/$slug'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiOgPageServerRoute: typeof ApiOgPageServerRoute
  ApiOgBlogSlugServerRoute: typeof ApiOgBlogSlugServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/og/$page': {
      id: '/api/og/$page'
      path: '/api/og/$page'
      fullPath: '/api/og/$page'
      preLoaderRoute: typeof ApiOgPageServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/og/blog/$slug': {
      id: '/api/og/blog/$slug'
      path: '/api/og/blog/$slug'
      fullPath: '/api/og/blog/$slug'
      preLoaderRoute: typeof ApiOgBlogSlugServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  BlogSlugRoute: BlogSlugRoute,
  BlogIndexRoute: BlogIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiOgPageServerRoute: ApiOgPageServerRoute,
  ApiOgBlogSlugServerRoute: ApiOgBlogSlugServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
